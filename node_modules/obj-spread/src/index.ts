export class ObjSpread<TO>{
    constructor(fromClass:any, toClass:any, converter:(val:any)=>TO){
      const funcsNames=Object.getOwnPropertyNames(fromClass);
      funcsNames.forEach(name=>{
          const srcFunc = (fromClass as any)[name];
        if(typeof srcFunc =='function'){
            Object.defineProperty(toClass.prototype, name, {
              value: function(){
                const args=[...<any>arguments];
                args.unshift(converter(this));
                return srcFunc.apply(null, args);
              }
            });
        }
      });
    }
  }
  