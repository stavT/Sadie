"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Stri = void 0;
var obj_spread_1 = require("obj-spread");
var Stri = /** @class */ (function () {
    function Stri() {
    }
    /**
     * you don`t even need it - just import this module and all funcs now available inside basic string class
     * @returns
     */
    Stri.includeMe = function () {
        return "";
    };
    /**
     * fast way to cut away a last part split by smth, for instance
     * `"lalala/hahaha/bebebe".cutLast('/')` will return `"lalala/hahaha"`
     * @param	splitter
     */
    Stri.cutLast = function (s, splitter) {
        // console.log(`STRI: cutting last of ${s} by ${splitter}`);
        if (!s.has(splitter))
            return s;
        var arr = s.split(splitter || "");
        arr.pop();
        return arr.join(splitter);
    };
    /**
     * fast way to cut away a first part split by smth, for instance
     * `"lalala/hahaha/bebebe".cutFirst('/')` will return `"hahaha/bebebe"`
     * @param	splitter
     */
    Stri.cutFirst = function (s, splitter) {
        if (!s.has(splitter))
            return s;
        var arr = s.split(splitter || "");
        arr.shift();
        return arr.join(splitter);
    };
    /**
     * fast way to get the last part split by smth, for instance
     * `"lalala/hahaha/bebebe".getLast('/')` will return `"bebebe"`
     * @param	splitter
     */
    Stri.getLast = function (s, splitter) {
        if (!s.has(splitter))
            return s;
        return s.split(splitter || "").pop();
    };
    /**
     * fast way get the first part split by smth, for instance
     * `"lalala/hahaha/bebebe".getFirst('/')` will return `"lalala"`
     * @param	splitter
     */
    Stri.getFirst = function (s, splitter) {
        if (!s.has(splitter))
            return s;
        return s.split(splitter || "").shift();
    };
    /**
     * Replaces `from` with `to`
     * @param from what to replace
     * @param to to what to replace
     */
    Stri.swap = function (s, from, to) { return s === null || s === void 0 ? void 0 : s.split(from || "").join(to); };
    /**
     * does this string contain `what`?
     * @param what
     * @returns
     */
    Stri.has = function (s, what) { return (s === null || s === void 0 ? void 0 : s.indexOf(what)) != -1; };
    /**
     * returns string between borderA and B. Gets between the first A and the LAST B
     * @param	borderA
     * @param	borderB
     */
    Stri.getBetween = function (s, borderA, borderB) {
        return s.between(borderA, borderB, true, false);
    };
    /**
     * returns string between borderA and B. Gets between the FIRST A and the FIRST B
     * @param	borderA
     * @param	borderB
     */
    Stri.getBetweenClose = function (s, borderA, borderB) {
        return s.between(borderA, borderB, true, true);
    };
    /**
     * returns string between borders
     * @param	borderA - left border
     * @param	borderB - right border
     * @param aIsFirst - true if borderA is first, false if is last
     * @param bIsFirst - true if borderB is first, false if is last
     */
    Stri.between = function (s, borderA, borderB, aIsFirst, bIsFirst) {
        if (s.has(borderA) && s.has(borderB)) {
            var r = aIsFirst ? s.cutFirst(borderA) : s.getLast(borderA);
            return bIsFirst ? r === null || r === void 0 ? void 0 : r.getFirst(borderB) : r === null || r === void 0 ? void 0 : r.cutLast(borderB);
        }
        else
            return "";
    };
    /**
     * Removes all `what`s in the string
     * In fact, same as `str.split(what).join('')`
     * @param what what to remove
     * @returns
     */
    Stri.oust = function (s, what) {
        if (!s)
            return "";
        if (!s.has(what))
            return s;
        return s.swap(what, "");
    };
    return Stri;
}());
exports.Stri = Stri;
try {
    if (typeof (String.prototype).cutFirst == "undefined")
        new obj_spread_1.ObjSpread(Stri, String, function (s) { return String(s); });
}
catch (e) {
}
